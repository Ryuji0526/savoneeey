version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.12.2

executors:
  backend:
    docker:
      - image: circleci/ruby:2.6.6-stretch-node
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: circleci/mysql:5.7.30
    working_directory: ~/repo
  frontend:
    docker:
      - image: circleci/node:14.3
        environment:
          NODE_ENV: test
    working_directory: ~/repo

commands:
  back_restore_cache:
    steps:
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "~/repo/backend/Gemfile.lock" }}
            - gem-cache-v1-
          working_directory: ~/repo/backend
  back_save_cache:
    steps:
      - save_cache:
          key: gem-cache-v1-{{ checksum "~/repo/backend/Gemfile.lock" }}
          paths:
            - ~/repo/backend/vendor/bundle
          working_directory: ~/repo/backend
  bundle_install:
    steps:
      - run:
          command: |
            gem install bundler
            bundle config set path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
          working_directory: ~/repo/backend
  front_restore_cache:
    steps:
      - restore_cache:
          key: v1-dependencies-{{ checksum "~/repo/frontend/package.json" }}
          working_directory: ~/repo/frontend
  front_save_cache:
    steps:
      - save_cache:
          key: v1-dependencies-{{ checksum "~/repo/frontend/package.json" }}
          paths:
            - node_modules
          working_directory: ~/repo/frontend
  yarn_install:
    steps:
      - run:
          name: Install yarn
          command: yarn install
          working_directory: ~/repo/frontend

jobs:
  test_backend:
    executor:
      name: backend
    steps:
      - checkout
      - back_restore_cache
      - bundle_install
      - back_save_cache
      - run:
          name: DB の待機
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Create database
          command: bundle exec rails db:create RAILS_ENV=test
          working_directory: ~/repo/backend
      - run:
          name: Migrate database
          command: bundle exec rails db:migrate RAILS_ENV=test
          working_directory: ~/repo/backend
      - run:
          name: Create directory to store test results
          command: mkdir /tmp/test-results
          working_directory: ~/repo/backend
      - run:
          name: RSpec
          command: |
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings) \
              || (printf "====== RETRYING...\n\n\n"; bundle exec rspec --only-failures)
          working_directory: ~/repo/backend
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: /home/circleci/repo/tmp/screenshots

  rubocop:
    executor:
      name: backend
    steps:
      - checkout
      - back_restore_cache
      - bundle_install
      - back_save_cache
      - run:
          name: Rubocop
          command: bundle exec rubocop --require rubocop-airbnb
          working_directory: ~/repo/backend

  test_frontend:
    executor:
      name: frontend
    steps:
      - checkout
      - front_restore_cache
      - yarn_install
      - front_save_cache
      - run:
          name: Jest test
          command: yarn test
          working_directory: ~/repo/frontend

  lint:
    executor:
      name: frontend
    steps:
      - checkout
      - front_restore_cache
      - yarn_install
      - front_save_cache
      - run:
          name: Lint
          command: yarn lint
          working_directory: ~/repo/frontend

  build_and_push_image_backend:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          account-url: AWS_ACCOUNT_URL
          repo: "savoneeey-backend"
          region: AWS_REGION
          tag: "${CIRCLE_SHA1}"
          path: ./backend/

  build_and_push_image_frontend:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          account-url: AWS_ACCOUNT_URL
          repo: "savoneeey-frontend"
          region: AWS_REGION
          tag: "${CIRCLE_SHA1}"
          path: ./frontend/


workflows:
  version: 2.1
  build:
    jobs:
      - test_backend
      - rubocop
      - test_frontend
      - lint
      - build_and_push_image_backend:
          requires:
            - test_backend
            - rubocop
            - test_frontend
            - lint
          filters:
            branches:
              only: main
      - build_and_push_image_frontend:
          requires:
            - build_and_push_image_backend
          filters:
            branches:
              only: main
